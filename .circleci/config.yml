# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  test:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.3-node-browsers
      - image: circleci/mysql:5.7-ram
        environment:
          MYSQL_ROOT_PASSWORD: qwerty123
          MYSQL_DATABASE: daim
          MYSQL_USER: user
          MYSQL_ROOT_HOST: 127.0.0.1
          MYSQL_HOST: 127.0.0.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      #
      # - image: redis:2.8.19

    steps:
      - checkout
      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run:
          # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: Install MySQL CLI, Import dummy data, Run an example query
          command: |
            sudo apt-get install default-mysql-client
            mysql -h 127.0.0.1 -u root -pqwerty123 daim < sql-data/dummy.sql
            mysql -h 127.0.0.1 -u root -pqwerty123 daim < sql-data/data.sql
            mysql -h 127.0.0.1 -u root -pqwerty123 --execute="SELECT * FROM daim.Persons"

      - run: sudo docker-php-ext-install mysqli json

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-


      - run: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.lock" }}
          paths:
            - ./vendor

      - run: composer run-script test

workflows:
  version: 2
  test:
    jobs:
      - test
