name: PHPUnit tests

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: PHP Syntax Checker (Lint)
      uses: StephaneBour/actions-php-lint@7.3
      with:
        # Folder to check syntax
        dir: ./src/DAIM

    - name: Shutdown Ubuntu MySQL (SUDO)
      run: sudo service mysql stop # Shutdown the Default MySQL, "sudo" is necessary, please not remove it

    - name: Setup MySQL
      uses: mirromutth/mysql-action@v1.1
      with:
        # The port of host
        host port: 3306
        # The port of container
        container port: 3306
        # --character-set-server - The character set of MySQL server
        character set server: 'utf8'
        # --collation-server - The character collation of MySQL server
        collation server: 'utf8_general_ci'
        # Version of MySQL to use
        # mysql version: # optional, default is latest
        # MYSQL_ROOT_PASSWORD - root superuser password
        mysql root password: 'qwerty123' # optional, default is 
        # MYSQL_DATABASE - name for the default database that is created
        mysql database: 'daim' # optional, default is 
        # MYSQL_USER - create the specified user with superuser power for created database
        mysql user: 'test2' # optional, default is
        # MYSQL_PASSWORD - specified superuser password which user is power for created database
        mysql password: 'qwerty123' # optional, default is
    - name: Waiting for MySQL to be ready
      run: |
        for i in `seq 1 15`;
        do
          nc -z 127.0.0.1 3306 && echo Success && exit 0
          echo -n .
          sleep 1
        done
        echo Failed waiting for MySQL && exit 1

    - name: Install MySQL CLI, Import dummy data, Run an example query
      run: |
        sudo apt-get install default-mysql-client
        mysql -h 127.0.0.1 -u root -pqwerty123 daim < sql-data/dummy.sql
        mysql -h 127.0.0.1 -u root -pqwerty123 --execute="SELECT * FROM daim.Persons"

    - name: Update lock file
      run: composer update

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Install dependencies
      run: composer install --prefer-dist

      # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    - name: Run test suite
      run: composer run-script test